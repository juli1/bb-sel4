
import <std_connector.camkes>;
import "components/timer/Timer.camkes";
import "components/ProducerThreadImpl/ProducerThreadImpl.camkes";
import "components/ConsumerThreadImpl/ConsumerThreadImpl.camkes";

component UART{
	hardware;
	dataport Buf mem;
}



assembly {
  composition {
    	component Timerbase timerbase;
    	component Timerbase timer7;
    	component prcm prcm;
    	component Timer timer;
    	component UART drv;
		
	component ProducerThreadImpl Prod_Pinger;
	component ConsumerThreadImpl Cons_PingMe;
		
	connection seL4SharedData connection0(from Prod_Pinger.data_source, to Cons_PingMe.data_sink);
	connection seL4Notification notification0 (from timer.Prod_Pinger_activator, to Prod_Pinger.activator);
	connection seL4Notification notification1 (from timer.Cons_PingMe_activator, to Cons_PingMe.activator);
	connection seL4HardwareMMIO uart_mem (from Cons_PingMe.uartmem, to drv.mem);
	connection seL4HardwareMMIO timer_mem (from timer.reg, to timerbase.reg);
        connection seL4HardwareInterrupt timer_irq (from timerbase.irq, to timer.irq);

	connection seL4HardwareMMIO prcm_mem (from Cons_PingMe.prcm_reg, to prcm.prcm_reg);
	connection seL4HardwareMMIO control_mem (from Cons_PingMe.control_reg, to prcm.control_reg);

	connection seL4HardwareMMIO ss_mem (from Cons_PingMe.ss_reg, to prcm.ss_reg);
	connection seL4HardwareMMIO mdio_mem (from Cons_PingMe.mdio_reg, to prcm.mdio_reg);
	connection seL4HardwareMMIO cppi_ram_mem (from Cons_PingMe.cppi_ram_reg, to prcm.cppi_ram_reg);
/*
	connection seL4HardwareMMIO cppi_ram2_mem (from Cons_PingMe.cppi_ram2_reg, to prcm.cppi_ram2_reg);
	connection seL4HardwareMMIO wr_mem (from Cons_PingMe.wr_reg, to prcm.wr_reg);
	connection seL4HardwareMMIO cpdma_mem (from Cons_PingMe.cpdma_reg, to prcm.cpdma_reg);
	connection seL4HardwareMMIO ale_mem (from Cons_PingMe.ale_reg, to prcm.ale_reg);
	connection seL4HardwareMMIO port0_mem (from Cons_PingMe.port0_reg, to prcm.port0_reg);
	connection seL4HardwareMMIO port1_mem (from Cons_PingMe.port1_reg, to prcm.port1_reg);
	connection seL4HardwareMMIO silver1_mem (from Cons_PingMe.silver1_reg, to prcm.silver1_reg);
	connection seL4HardwareMMIO port2_mem (from Cons_PingMe.port2_reg, to prcm.port2_reg);
	connection seL4HardwareMMIO silver2_mem (from Cons_PingMe.silver2_reg, to prcm.silver2_reg);
*/

	connection seL4HardwareMMIO timer7_mem (from Cons_PingMe.timer7reg, to timer7.reg);
        connection seL4HardwareInterrupt timer7_irq (from timer7.irq, to Cons_PingMe.timer7irq);

        connection seL4HardwareInterrupt netrx_irq (from prcm.ethrx, to Cons_PingMe.ethrx);
        connection seL4HardwareInterrupt nettx_irq (from prcm.ethtx, to Cons_PingMe.ethtx);

	}
	
	configuration {


connection0.from_access = "W";
connection0.to_access = "R";


timerbase.reg_attributes = "0x48040000:0x1000";
timerbase.irq_attributes = 68;        

timer7.reg_attributes = "0x4804A000:0x1000";
timer7.irq_attributes = 95;        

prcm.prcm_reg_attributes         = "0x44E00000:0x1000";
prcm.control_reg_attributes      = "0x44E10000:0x1000";

prcm.ss_reg_attributes 	         = "0x4A100000:0x1000";

//prcm.port0_reg_attributes      = "0x4A100100:0x100";
//prcm.port1_reg_attributes      = "0x4A100200:0x100";
//prcm.port2_reg_attributes      = "0x4A100300:0x100";
//prcm.cpdma_reg_attributes      = "0x4A100800:0x100";
//prcm.ale_reg_attributes        = "0x4A100D00:0x10";
//prcm.silver1_reg_attributes    = "0x4A100D80:0x10";
//prcm.silver2_reg_attributes    = "0x4A100DC0:0x10";

prcm.mdio_reg_attributes         = "0x4A101000:0x1000";
//prcm.wr_reg_attributes         = "0x4A101200:0x100";

prcm.cppi_ram_reg_attributes   = "0x4A102000:0x2000";
//prcm.cppi_ram2_reg_attributes   = "0x4A103000:0x1000";

prcm.ethrx_attributes = 41;
prcm.ethtx_attributes = 42;
prcm.ethrx_priority = 100;
prcm.ethtx_priority = 100;

Cons_PingMe.ethrx_priority = 100;
Cons_PingMe.ethtx_priority = 100;

drv.mem_attributes       = "0x48022000:0x1000";
//drv.mem_attributes       = "0x44E09000:0x1000";

    }
} 
